import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt

shapefile = 'gpd_shapefiles/vg2500_bld.shp'

excl = pd.read_excel('google_trends_kw.xlsx', sheet_name='Datenbasis (By region)')
df_ibr = pd.DataFrame(excl)

map_df = gpd.read_file(shapefile)
merged_dfs = map_df.set_index('GEN').join(df_ibr.set_index('geoName'))

# Data preprocessing and cleaning
clean_condition = ((merged_dfs == 0).astype(int).sum(axis=0) <= 10)
clean_condition = list((clean_condition.index[clean_condition]))

df = merged_dfs.loc[:, clean_condition]
print('df shape is: ', df.shape)

max_pv = df['photovoltaik'].max()
max_sa = df['solaranlage'].max()
vmin, vmax = 0, max_pv

df['coords'] = df['geometry'].apply(
    lambda x: x.representative_point().coords[:])  # For creating point inside polygonal object (Bundesland)
df['coords'] = [coords[0] for coords in df['coords']]


def plot_query(kw):
    """ Function to plot data on the german map by keyword.
    Keywords are only available from df, generated by gt_main.
    kw must be exactly the same as in google_trends_kw.xlsx """

    fig, ax = plt.subplots(1, figsize=(10, 10))
    df.plot(column=kw, cmap='YlOrRd', linewidth=0.8, ax=ax, edgecolor='0.8')
    for index, row in df.iterrows():
        if index == 'Berlin':
            plt.annotate(text=row[kw], xy=row['coords'], horizontalalignment='right', fontsize=8)
            continue
        plt.annotate(text=row[kw], xy=row['coords'], horizontalalignment='center', fontsize=8)

    ax.axis('off')

    ax.set_title('Popularity for "{kw}" '.format(kw=kw), fontsize=15)

    scmp = plt.cm.ScalarMappable(cmap='YlOrRd', norm=plt.Normalize(vmin=vmin, vmax=vmax))
    scmp._A = []

    # Scalable colorbar on the right
    cbar = fig.colorbar(scmp, fraction=0.046, pad=0.04)
    return plt.show()


plot_query('photovoltaik')
